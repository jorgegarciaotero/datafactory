{
	"name": "df_window",
	"properties": {
		"folder": {
			"name": "13.Window"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "asql_awdw_customer",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_storage_abs_customer",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "window1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CategoriaID as integer,",
				"          Categoria as string,",
				"          Producto as string,",
				"          UnitPrice as decimal(19,4),",
				"          Cantidad as integer,",
				"          Total as decimal(19,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: '     SELECT PC.ProductCategoryID CategoriaID, PC.Name Categoria, P.Name Producto, OD.UnitPrice, 100 Cantidad,\\n     (OD.UnitPrice*100) Total\\nFROM [SalesLT].[ProductCategory] AS PC\\n     INNER JOIN [SalesLT].[Product] AS P ON P.ProductCategoryID=PC.ProductCategoryID\\n     INNER JOIN [SalesLT].[SalesOrderDetail] AS OD ON OD.ProductID=P.ProductID',",
				"     format: 'query') ~> source2",
				"source2 window(over(CategoriaID),",
				"     asc(CategoriaID, true),",
				"     SUM = toDecimal(sum(UnitPrice*Cantidad), 2),",
				"          AVG = toDecimal(avg(UnitPrice*Cantidad), 2),",
				"          COUNT = count(UnitPrice)) ~> window1",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: '12.window',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}